import * as InputDataType from '../types/inputData';
import * as CallbackDataType from '../types/callbackData';
import { ZaloMiniProgramSDK } from './sdk';
export declare class Device {
    /**
     * Sets the device orientation.
     *
     * @async
     * @function setDeviceOrientation
     * @category Device
     *
     * @example
     * zmpApis.setDeviceOrientation({
     *  rotate: 0
     * }).then((res) => {
     *  console.log("Success");
     * }).catch((error) => {
     *  console.log("Fail");
     * });
     *
     * @param {Object} object
     * @param {Number} object.rotate - 0: default, 1: sensor, 2: force portrait, 3: force landscape
     *
     *
     */
    static setDeviceOrientation(this: ZaloMiniProgramSDK, object: InputDataType.DeviceOrientationType): Promise<void>;
    /**
     * Gets the network type.
     *
     * @async
     * @function getNetworkType
     * @category Device
     *
     * @example
     * zmpApis.getNetworkType().then((res) => {
     *  console.log(res.networkType);
     * }).catch((error) => {
     *  console.log("Fail");
     * });
     *
     * @returns {Promise<NetworkType>} Promise object
     *
     */
    static getNetworkType(this: ZaloMiniProgramSDK, object?: InputDataType.CallbackType): Promise<CallbackDataType.NetworkTypeSuccessCallback>;
    /**
     * Listens on the network status change event.
     *
     * @function
     * @category DeviceonNetworkStatusChange
     *
     * @example
     * zmpApis.onNetworkStatusChange(function (res) {
     *  console.log(res.isConnected);
     *  console.log(res.networkType);
     * })
     *
     * @param {Function} callback - The callback function for the network status change event.
     */
    static onNetworkStatusChange(this: ZaloMiniProgramSDK, callback: (res: InputDataType.OnNetworkStatusChangeCallback) => void): Promise<void>;
    /**
     * Starts searching for nearby iBeacon devices.
     *
     * @function startBeaconDiscovery
     * @category Device
     *
     * @example
     * zmpApis.startBeaconDiscovery().then((res) => {})
     *
     * @param {Object} object
     * @param {string} [object.uuids] - The list of iBeacon device broadcast UUIDs
     */
    static startBeaconDiscovery(this: ZaloMiniProgramSDK, object: InputDataType.StartBeaconDiscoveryDataType): Promise<boolean>;
    /**
     * Stops searching for nearby iBeacon devices.
     *
     * @function stopBeaconDiscovery
     * @category Device
     *
     * @example
     * zmpApis.stopBeaconDiscovery().then((res) => {})
     *
     */
    static stopBeaconDiscovery(this: ZaloMiniProgramSDK, object?: InputDataType.CallbackType): Promise<boolean>;
    /**
     * Obtains all discovered iBeacon devices.
     *
     * @function getBeacons
     * @category Device
     *
     * @example
     * zmpApis.getBeacons().then((res) => {
     *  console.log(res.beacons);
     * })
     *
     */
    static getBeacons(this: ZaloMiniProgramSDK, object?: InputDataType.CallbackType): Promise<CallbackDataType.iBeaconSuccessCallback>;
}
