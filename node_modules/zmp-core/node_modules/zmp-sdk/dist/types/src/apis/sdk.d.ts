import { ZJSBridgeProvider } from '../bridgeProvider';
import * as InputDataType from '../types/inputData';
import * as CallbackDataType from '../types/callbackData';
import { Basics } from './basic';
import { NavigationBar } from './navigationBar';
import { Device } from './device';
import { DataCaching } from './dataCaching';
import { OpenApi } from './openApi';
import { Window } from './window';
import { Location } from './location';
export interface SDK {
    ZJSBridge: any;
    getAppId: () => string;
    login: (object?: InputDataType.CallbackType) => Promise<string>;
    getAccessToken: (object?: InputDataType.CallbackType) => Promise<string | null>;
    getVersion: () => string;
    setNavigationBarTitle: (object: InputDataType.NavBarTitleType) => Promise<any>;
    setNavigationBarColor: (object: InputDataType.NavBarColorType) => Promise<any>;
    setNavigationBarLeftButton: (object: InputDataType.NavBarLeftMenuType) => Promise<any>;
    setDeviceOrientation: (object: InputDataType.DeviceOrientationType) => Promise<void>;
    setStorage: (object: InputDataType.SetStorageDataType) => Promise<any>;
    getStorage: (object: InputDataType.GetStorageDataType) => Promise<any>;
    getStorageInfo: (object?: InputDataType.CallbackType | undefined) => Promise<any>;
    removeStorage: (object: InputDataType.RemoveStorageDataType) => Promise<any>;
    clearStorage: (option?: InputDataType.ClearStorageDataType) => Promise<any>;
    getUserInfo: (object?: InputDataType.CallbackType | undefined) => Promise<CallbackDataType.getUserInfoSuccessCallback>;
    getNetworkType: (object?: InputDataType.CallbackType | undefined) => Promise<CallbackDataType.NetworkTypeSuccessCallback>;
    onNetworkStatusChange: (callback: (res: InputDataType.OnNetworkStatusChangeCallback) => void) => Promise<void>;
    startBeaconDiscovery: (object: InputDataType.StartBeaconDiscoveryDataType) => Promise<boolean>;
    stopBeaconDiscovery: (object?: InputDataType.CallbackType | undefined) => Promise<boolean>;
    getBeacons: (object?: InputDataType.CallbackType | undefined) => Promise<CallbackDataType.iBeaconSuccessCallback>;
    closeApp: (object?: InputDataType.CallbackType | undefined) => Promise<any>;
    getLocation: (object?: InputDataType.CallbackType | undefined) => Promise<CallbackDataType.getLocationSuccessCallback>;
}
export declare class ZaloMiniProgramSDK extends ZJSBridgeProvider implements SDK {
    #private;
    ZJSBridge: any;
    private static instance;
    static getInstance(): ZaloMiniProgramSDK;
    constructor();
    getAppId(): string;
    login(object?: InputDataType.CallbackType): Promise<string>;
    getAccessToken(object?: InputDataType.CallbackType): Promise<string | null>;
    getVersion: typeof Basics.getVersion;
    setNavigationBarTitle: typeof NavigationBar.setNavigationBarTitle;
    setNavigationBarColor: typeof NavigationBar.setNavigationBarColor;
    setNavigationBarLeftButton: typeof NavigationBar.setNavigationBarLeftButton;
    setDeviceOrientation: typeof Device.setDeviceOrientation;
    setStorage: typeof DataCaching.setStorage;
    getStorage: typeof DataCaching.getStorage;
    getStorageInfo: typeof DataCaching.getStorageInfo;
    removeStorage: typeof DataCaching.removeStorage;
    clearStorage: typeof DataCaching.clearStorage;
    getUserInfo: typeof OpenApi.getUserInfo;
    getNetworkType: typeof Device.getNetworkType;
    onNetworkStatusChange: typeof Device.onNetworkStatusChange;
    startBeaconDiscovery: typeof Device.startBeaconDiscovery;
    stopBeaconDiscovery: typeof Device.stopBeaconDiscovery;
    getBeacons: typeof Device.getBeacons;
    closeApp: typeof Window.closeApp;
    getLocation: typeof Location.getLocation;
}
export declare class MockSDK implements SDK {
    #private;
    ZJSBridge: any;
    getAppId: () => string;
    login: (object?: InputDataType.CallbackType | undefined) => Promise<string>;
    getAccessToken: (object?: InputDataType.CallbackType | undefined) => Promise<string | null>;
    getVersion: typeof Basics.getVersion;
    setNavigationBarTitle: (object: InputDataType.NavBarTitleType) => Promise<any>;
    setNavigationBarColor: (object: InputDataType.NavBarColorType) => Promise<any>;
    setNavigationBarLeftButton: (object: InputDataType.NavBarLeftMenuType) => Promise<any>;
    setDeviceOrientation: (object: InputDataType.DeviceOrientationType) => Promise<void>;
    setStorage: (object: InputDataType.SetStorageDataType) => Promise<any>;
    getStorage: (object: InputDataType.GetStorageDataType) => Promise<any>;
    getStorageInfo: (object?: InputDataType.CallbackType | undefined) => Promise<any>;
    removeStorage: (object: InputDataType.RemoveStorageDataType) => Promise<any>;
    clearStorage: (option?: InputDataType.ClearStorageDataType | undefined) => Promise<any>;
    getUserInfo: (object?: InputDataType.CallbackType | undefined) => Promise<CallbackDataType.getUserInfoSuccessCallback>;
    getNetworkType: (object?: InputDataType.CallbackType | undefined) => Promise<CallbackDataType.NetworkTypeSuccessCallback>;
    onNetworkStatusChange: (callback: (res: InputDataType.OnNetworkStatusChangeCallback) => void) => Promise<void>;
    startBeaconDiscovery: (object: InputDataType.StartBeaconDiscoveryDataType) => Promise<boolean>;
    stopBeaconDiscovery: (object?: InputDataType.CallbackType | undefined) => Promise<boolean>;
    getBeacons: (object?: InputDataType.CallbackType | undefined) => Promise<CallbackDataType.iBeaconSuccessCallback>;
    closeApp: (object?: InputDataType.CallbackType | undefined) => Promise<any>;
    getLocation: (object?: InputDataType.CallbackType | undefined) => Promise<CallbackDataType.getLocationSuccessCallback>;
}
