"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

exports.__esModule = true;
exports.default = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _react = _interopRequireWildcard(require("react"));

var _utils = require("../shared/utils");

var _mixins = require("../shared/mixins");

var _useTab = require("../shared/use-tab");

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

var Block = /*#__PURE__*/(0, _react.forwardRef)(function (props, ref) {
  var className = props.className,
      inset = props.inset,
      xsmallInset = props.xsmallInset,
      smallInset = props.smallInset,
      mediumInset = props.mediumInset,
      largeInset = props.largeInset,
      xlargeInset = props.xlargeInset,
      strong = props.strong,
      accordionList = props.accordionList,
      accordionOpposite = props.accordionOpposite,
      tabs = props.tabs,
      tab = props.tab,
      tabActive = props.tabActive,
      noHairlines = props.noHairlines,
      noHairlinesIos = props.noHairlinesIos,
      noHairlinesMd = props.noHairlinesMd,
      noHairlinesAurora = props.noHairlinesAurora,
      id = props.id,
      style = props.style,
      children = props.children;
  var extraAttrs = (0, _utils.getExtraAttrs)(props);
  var elRef = (0, _react.useRef)(null);
  (0, _react.useImperativeHandle)(ref, function () {
    return {
      el: elRef.current
    };
  });
  (0, _useTab.useTab)(elRef, props);
  var classes = (0, _utils.classNames)(className, 'block', {
    inset: inset,
    'xsmall-inset': xsmallInset,
    'small-inset': smallInset,
    'medium-inset': mediumInset,
    'large-inset': largeInset,
    'xlarge-inset': xlargeInset,
    'block-strong': strong,
    'accordion-list': accordionList,
    'accordion-opposite': accordionOpposite,
    tabs: tabs,
    tab: tab,
    'tab-active': tabActive,
    'no-hairlines': noHairlines,
    'no-hairlines-md': noHairlinesMd,
    'no-hairlines-ios': noHairlinesIos,
    'no-hairlines-aurora': noHairlinesAurora
  }, (0, _mixins.colorClasses)(props));
  return /*#__PURE__*/_react.default.createElement("div", (0, _extends2.default)({
    id: id,
    style: style,
    className: classes,
    ref: elRef
  }, extraAttrs), children);
});
Block.displayName = 'zmp-block';
var _default = Block;
exports.default = _default;