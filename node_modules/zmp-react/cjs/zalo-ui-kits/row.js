"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

exports.__esModule = true;
exports.default = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _objectWithoutPropertiesLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutPropertiesLoose"));

var _react = _interopRequireWildcard(require("react"));

var _row = _interopRequireDefault(require("../components/row"));

var _utils = require("../shared/utils");

var _constants = require("../../common/constants");

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

/* dts-imports
import { FlexLayoutGap } from '../../common/components-enum-props';
*/

/* dts-props
  id: string | number;
  className: string;
  style: React.CSSProperties;
  noGap? : boolean
  tag? : string
  resizable? : boolean
  resizableFixed? : boolean
  resizableAbsolute? : boolean
  resizableHandler? : boolean
  gap?:  keyof typeof FlexLayoutGap;
  onClick? : (event?: any) => void
  onGridResize? : (...args: any[]) => void
  COLOR_PROPS
  ref?: React.MutableRefObject<{el: HTMLElement | null}>;
  CHILDREN_PROP
*/
var ZMPRow = /*#__PURE__*/(0, _react.forwardRef)(function (props, ref) {
  var elRef = (0, _react.useRef)(null);
  (0, _react.useImperativeHandle)(ref, function () {
    return elRef.current;
  });
  var gap = props.gap,
      className = props.className,
      noGap = props.noGap,
      others = (0, _objectWithoutPropertiesLoose2.default)(props, ["gap", "className", "noGap"]);
  var classes = className;

  if (!noGap && gap) {
    classes = (0, _utils.classNames)(_constants.FLEX_GAP_CLASSNAME[gap] || '', classes);
  }

  return /*#__PURE__*/_react.default.createElement(_row.default, (0, _extends2.default)({
    ref: elRef,
    className: classes,
    noGap: noGap
  }, others));
});
ZMPRow.displayName = 'zmp-row';
var _default = ZMPRow;
exports.default = _default;