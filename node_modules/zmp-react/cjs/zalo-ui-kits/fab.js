"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

exports.__esModule = true;
exports.default = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _react = _interopRequireWildcard(require("react"));

var _fab = _interopRequireDefault(require("../components/fab"));

var _utils = require("../shared/utils");

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

/* dts-props
  id?: string | number;
  className?: string;
  style?: React.CSSProperties;
  morphTo? : string;
  href? : boolean | string;
  target? : string;
  text? : string;
  position? : string;
  tooltip? : string;
  tooltipTrigger? : string;
  onClick? : (event?: any) => void;
  large: boolean;
  small: boolean;
  disabled: boolean;
  COLOR_PROPS
  ref?: React.MutableRefObject<{el: HTMLElement | null}>;
  CHILDREN_PROP
*/
var ZMPFab = /*#__PURE__*/(0, _react.forwardRef)(function (props, ref) {
  var elRef = (0, _react.useRef)(null);
  var large = props.large,
      small = props.small,
      className = props.className,
      disabled = props.disabled;
  (0, _react.useImperativeHandle)(ref, function () {
    return elRef.current;
  });
  var sizeClass = '';

  if (small) {
    sizeClass = 'zmp-fab-small';
  } else if (large) {
    sizeClass = 'zmp-fab-large';
  }

  var classes = (0, _utils.classNames)(className, sizeClass, disabled ? 'disabled' : '');
  return /*#__PURE__*/_react.default.createElement(_fab.default, (0, _extends2.default)({
    ref: elRef
  }, props, {
    className: classes
  }));
});
ZMPFab.displayName = 'zmp-fab';
var _default = ZMPFab;
exports.default = _default;