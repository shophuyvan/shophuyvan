"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

exports.__esModule = true;
exports.default = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _react = _interopRequireWildcard(require("react"));

var _view = _interopRequireDefault(require("../components/view"));

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

/* dts-imports
  import { View, Router } from 'zmp-core/types';
*/

/* dts-props
  id?: string | number;
  className?: string;
  style?: React.CSSProperties;
  tab? : boolean
  tabActive? : boolean
  name? : string
  router? : boolean
  linksView? : Object | string
  url? : string
  main? : boolean
  stackPages? : boolean
  xhrCache? : boolean
  xhrCacheIgnore? : Array<any>
  xhrCacheIgnoreGetParameters? : boolean
  xhrCacheDuration? : number
  preloadPreviousPage? : boolean
  allowDuplicateUrls? : boolean
  reloadPages? : boolean
  reloadDetail? : boolean
  masterDetailResizable? : boolean
  masterDetailBreakpoint? : number
  removeElements? : boolean
  removeElementsWithTimeout? : boolean
  removeElementsTimeout? : number
  restoreScrollTopOnBack? : boolean
  loadInitialPage? : boolean
  iosSwipeBack? : boolean
  iosSwipeBackAnimateShadow? : boolean
  iosSwipeBackAnimateOpacity? : boolean
  iosSwipeBackActiveArea? : number
  iosSwipeBackThreshold? : number
  mdSwipeBack? : boolean
  mdSwipeBackAnimateShadow? : boolean
  mdSwipeBackAnimateOpacity? : boolean
  mdSwipeBackActiveArea? : number
  mdSwipeBackThreshold? : number
  auroraSwipeBack? : boolean
  auroraSwipeBackAnimateShadow? : boolean
  auroraSwipeBackAnimateOpacity? : boolean
  auroraSwipeBackActiveArea? : number
  auroraSwipeBackThreshold? : number
  browserHistory? : boolean
  browserHistoryRoot? : string
  browserHistoryAnimate? : boolean
  browserHistoryAnimateOnLoad? : boolean
  browserHistorySeparator? : string
  browserHistoryOnLoad? : boolean
  browserHistoryInitialMatch?: boolean;
  animate? : boolean
  transition? : string
  iosDynamicNavbar? : boolean
  iosAnimateNavbarBackIcon? : boolean
  materialPageLoadDelay? : number
  passRouteQueryToRequest? : boolean
  passRouteParamsToRequest? : boolean
  routesBeforeEnter? : Function | Array<any>
  routesBeforeLeave? : Function | Array<any>
  init? : boolean
  initRouterOnTabShow?: boolean
  COLOR_PROPS
  onViewInit? : (view?: View.View) => void
  onViewResize? : (width?: number) => void
  onSwipeBackMove? : (swipeBackData?: Router.SwipeBackData) => void
  onSwipeBackBeforeChange? : (swipeBackData?: Router.SwipeBackData) => void
  onSwipeBackAfterChange? : (swipeBackData?: Router.SwipeBackData) => void
  onSwipeBackBeforeReset? : (swipeBackData?: Router.SwipeBackData) => void
  onSwipeBackAfterReset? : (swipeBackData?: Router.SwipeBackData) => void
  onTabShow? : (el?: HTMLElement) => void
  onTabHide? : (el?: HTMLElement) => void
  ref?: React.MutableRefObject<{el: HTMLElement | null; zmpView: () => View.View}>;
  routesAdd: Router.RouteParameters[]
  CHILDREN_PROP
*/
var ZMPView = /*#__PURE__*/(0, _react.forwardRef)(function (props, ref) {
  var browserHistory = props.browserHistory,
      tab = props.tab;
  var elRef = (0, _react.useRef)(null);
  var pushState = browserHistory !== undefined ? browserHistory : !tab;
  (0, _react.useImperativeHandle)(ref, function () {
    return elRef.current;
  });
  return /*#__PURE__*/_react.default.createElement(_view.default, (0, _extends2.default)({
    ref: elRef
  }, props, {
    browserHistory: pushState,
    browserHistoryStoreHistory: false
  }));
});
ZMPView.displayName = 'zmp-view';
var _default = ZMPView;
exports.default = _default;