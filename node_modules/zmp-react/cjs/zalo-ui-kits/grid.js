"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

exports.__esModule = true;
exports.default = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _react = _interopRequireWildcard(require("react"));

var _utils = require("../shared/utils");

var _gridItem = _interopRequireDefault(require("./grid-item"));

var _constants = require("../../common/constants");

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

/* dts-props
  id?: string | number;
  className?: string;
  style?: React.CSSProperties;
  itemClassName?: string;
  noBorder?: boolean;
  data?: Array<any>;
  columns?: number;
  ref?: React.MutableRefObject<{el: HTMLElement | null}>;
  CHILDREN_PROP
*/
var Grid = /*#__PURE__*/(0, _react.forwardRef)(function (_ref, ref) {
  var id = _ref.id,
      className = _ref.className,
      style = _ref.style,
      _ref$data = _ref.data,
      data = _ref$data === void 0 ? [] : _ref$data,
      noBorder = _ref.noBorder,
      children = _ref.children,
      columns = _ref.columns;
  var elRef = (0, _react.useRef)(null);
  var gridColumns = 3;

  if (columns && typeof columns === 'number' && columns > _constants.MIN_GRID_COLUMNS && columns < _constants.MAX_GRID_COLUMNS) {
    gridColumns = columns;
  }

  (0, _react.useImperativeHandle)(ref, function () {
    return {
      el: elRef.current
    };
  });
  var classes = (0, _utils.classNames)('grid', "grid-" + gridColumns, {
    'grid-no-border': noBorder
  }, className);

  var renderItem = function renderItem(item, index) {
    return /*#__PURE__*/_react.default.createElement(_gridItem.default, (0, _extends2.default)({
      key: item.key || "grid-item-" + index
    }, item, {
      icon: item.icon,
      label: item.label
    }));
  };

  return /*#__PURE__*/_react.default.createElement("div", {
    id: id,
    className: classes,
    style: style,
    ref: elRef
  }, data.length > 0 ? data.map(function (item, index) {
    return renderItem(item, index);
  }) : children);
});
Grid.displayName = 'zmp-grid';
var _default = Grid;
exports.default = _default;