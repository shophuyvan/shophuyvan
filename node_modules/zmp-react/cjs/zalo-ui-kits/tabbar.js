"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

exports.__esModule = true;
exports.default = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _react = _interopRequireWildcard(require("react"));

var _toolbar = _interopRequireDefault(require("../components/toolbar"));

var _utils = require("../shared/utils");

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

/* dts-props
  id?: string | number;
  className?: string;
  style?: React.CSSProperties;
  labels? : boolean
  scrollable? : boolean
  hidden? : boolean
  noShadow? : boolean
  noHairline? : boolean
  position? : string
  top? : boolean
  bottom? : boolean
  fill?: boolean
  COLOR_PROPS
  onTabbarHide? : (...args: any[]) => void
  onTabbarShow? : (...args: any[]) => void
  ref?: React.MutableRefObject<{el: HTMLElement | null; hide: () => void; show: () => void;}>;
  CHILDREN_PROP
*/
var TabBar = /*#__PURE__*/(0, _react.forwardRef)(function (props, ref) {
  var elRef = (0, _react.useRef)(null);
  var onTabbarHide = props.onTabbarHide,
      onTabbarShow = props.onTabbarShow,
      className = props.className,
      fill = props.fill;
  (0, _react.useImperativeHandle)(ref, function () {
    return elRef.current;
  });
  var classes = (0, _utils.classNames)(className, {
    'toolbar-fill': fill
  });
  return /*#__PURE__*/_react.default.createElement(_toolbar.default, (0, _extends2.default)({
    onToolbarHide: onTabbarHide,
    onToolbarShow: onTabbarShow,
    tabbar: true,
    className: classes
  }, props, {
    ref: elRef
  }), props.children);
});
TabBar.displayName = 'zmp-toolbar';
var _default = TabBar;
exports.default = _default;