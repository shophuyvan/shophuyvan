"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

exports.__esModule = true;
exports.default = void 0;

var _react = _interopRequireWildcard(require("react"));

var _utils = require("../shared/utils");

var _link = _interopRequireDefault(require("./link"));

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

/* dts-props
  id?: string | number;
  className?: string;
  style?: React.CSSProperties;
  children? : any;
  label?: string
  icon?: any
  to?: string;
  onClick? : (event?: any) => void;
  key?: string
  ref?: React.MutableRefObject<{el: HTMLElement | null}>;
  disabled: boolean;
  CHILDREN_PROP
*/
var GridItem = /*#__PURE__*/(0, _react.forwardRef)(function (_ref, ref) {
  var id = _ref.id,
      className = _ref.className,
      style = _ref.style,
      children = _ref.children,
      label = _ref.label,
      icon = _ref.icon,
      onClick = _ref.onClick,
      to = _ref.to;
  var elRef = (0, _react.useRef)(null);
  (0, _react.useImperativeHandle)(ref, function () {
    var _elRef$current;

    return {
      el: (_elRef$current = elRef.current) == null ? void 0 : _elRef$current.el
    };
  });
  var classes = (0, _utils.classNames)('grid-item', 'no-ripple', className);
  return /*#__PURE__*/_react.default.createElement(_link.default, {
    id: id,
    onClick: onClick,
    className: classes,
    style: style,
    ref: elRef,
    noLinkClass: true,
    href: to || '#'
  }, icon && /*#__PURE__*/_react.default.createElement("span", {
    className: "grid-item-icon"
  }, icon), children, label && /*#__PURE__*/_react.default.createElement("span", {
    className: "grid-item-label"
  }, label));
});
GridItem.displayName = 'zmp-grid-item';
var _default = GridItem;
exports.default = _default;