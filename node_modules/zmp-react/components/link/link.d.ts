
import * as React from 'react';

import { SmartSelect } from 'zmp-core/types';
import { Icon } from 'zmp-core/types';


interface LinkProps {
  slot?: string;
  id?: string | number;
  className?: string;
  style?: React.CSSProperties;
  noLinkClass ?: boolean;
  text ?: string;
  tabLink ?: boolean | string;
  tabLinkActive ?: boolean;
  tabbarLabel ?: boolean;
  iconOnly ?: boolean;
  badge ?: string | number;
  badgeColor ?: string;
  iconBadge ?: string | number;
  href ?: string | boolean;
  tooltip ?: string;
  tooltipTrigger ?: string;
  color?: string;
  colorTheme?: string;
  textColor?: string;
  bgColor?: string;
  borderColor?: string;
  rippleColor?: string;
  themeDark?: boolean;
  icon?: string;
  iconMaterial?: string;
  iconZMP?: Icon.IconZMP;
  iconIos?: string;
  iconMd?: string;
  iconAurora?: string;
  iconColor?: string;
  iconSize?: string | number;
  searchbarEnable?: boolean | string;
  searchbarDisable?: boolean | string;
  searchbarClear?: boolean | string;
  searchbarToggle?: boolean | string;
  sheetOpen?: boolean | string;
  sheetClose?: boolean | string;
  sortableEnable?: boolean | string;
  sortableDisable?: boolean | string;
  sortableToggle?: boolean | string;
  back?: boolean;
  force?: boolean;
  animate?: boolean;
  ignoreCache?: boolean;
  reloadCurrent?: boolean;
  reloadAll?: boolean;
  reloadPrevious?: boolean;
  reloadDetail?: boolean;
  routeTabId?: string;
  view?: string;
  routeProps?: any;
  preventRouter?: boolean;
  transition?: string;
  onClick ?: (event?: any) => void;
  ref?: React.MutableRefObject<{el: HTMLElement | null}>;
  children?: React.ReactNode;
}
declare const Link: React.FunctionComponent<LinkProps>;

export default Link;
  