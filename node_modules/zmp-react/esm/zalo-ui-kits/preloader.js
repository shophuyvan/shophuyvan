import _extends from "@babel/runtime/helpers/extends";
import React, { forwardRef, useRef, useImperativeHandle } from 'react';
import { classNames, getExtraAttrs, extend, getComponentId } from '../shared/utils';
/* dts-props
  id?: string | number;
  className?: string;
  style?: React.CSSProperties;
  logo?: any
  size? : number | string;
  ref?: React.MutableRefObject<{el: HTMLElement | null}>;
  CHILDREN_PROP
*/

var Preloader = /*#__PURE__*/forwardRef(function (props, ref) {
  var className = props.className,
      _props$id = props.id,
      id = _props$id === void 0 ? getComponentId() : _props$id,
      style = props.style,
      size = props.size,
      logo = props.logo;
  var extraAttrs = getExtraAttrs(props);
  var elRef = useRef(null);
  useImperativeHandle(ref, function () {
    return {
      el: elRef.current
    };
  });
  var preloaderStyle = {};
  var sizeComputed = size;

  if (sizeComputed && typeof sizeComputed === 'string' && sizeComputed.indexOf('px') >= 0) {
    sizeComputed = sizeComputed.replace('px', '');
  }

  if (sizeComputed) {
    preloaderStyle.width = sizeComputed + "px";
    preloaderStyle.height = sizeComputed + "px";
    preloaderStyle['--zmp-preloader-size'] = sizeComputed + "px";
  }

  if (style) extend(preloaderStyle, style || {});
  var preloaderLogo = /*#__PURE__*/React.createElement("div", {
    className: "ring-spinner"
  }, /*#__PURE__*/React.createElement("div", {
    className: "ball-holder"
  }, /*#__PURE__*/React.createElement("div", {
    className: "ball"
  })));
  var innerEl = /*#__PURE__*/React.createElement("svg", {
    className: "spinner",
    viewBox: "0 0 66 66",
    xmlns: "http://www.w3.org/2000/svg"
  }, /*#__PURE__*/React.createElement("circle", {
    className: "spinner-path",
    fill: "transparent",
    cx: "33",
    cy: "33",
    r: "30",
    strokeWidth: "5",
    stroke: "url(#gradient-" + id + ")"
  }), /*#__PURE__*/React.createElement("linearGradient", {
    id: "gradient-" + id
  }, /*#__PURE__*/React.createElement("stop", {
    offset: "20%",
    stopOpacity: "1"
  }), /*#__PURE__*/React.createElement("stop", {
    offset: "50%",
    stopOpacity: ".5"
  }), /*#__PURE__*/React.createElement("stop", {
    offset: "100%",
    stopOpacity: "0"
  })), /*#__PURE__*/React.createElement("svg", {
    className: "spinner-dot dot",
    width: "5",
    height: "5",
    viewBox: "0 0 66 66",
    xmlns: "http://www.w3.org/2000/svg",
    x: "39",
    y: "1.7"
  }, /*#__PURE__*/React.createElement("circle", {
    className: "dot-path",
    cx: "33",
    cy: "33",
    r: "30"
  })));
  var classes = classNames(className, {
    'preloader-with-logo': logo
  }, 'zmp-preloader');
  return /*#__PURE__*/React.createElement("span", _extends({
    id: id,
    style: preloaderStyle,
    className: classes,
    ref: elRef
  }, extraAttrs), logo ? preloaderLogo : innerEl, logo && /*#__PURE__*/React.createElement("div", {
    className: "preloader-logo-container"
  }, /*#__PURE__*/React.createElement("img", {
    src: logo,
    className: "logo",
    alt: ""
  })));
});
Preloader.displayName = 'zmp-preloader';
export default Preloader;