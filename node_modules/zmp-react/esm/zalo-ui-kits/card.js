import React, { forwardRef, useRef, useImperativeHandle } from 'react';
import { classNames } from '../shared/utils';
/* dts-props
  className?: string;
  style?: React.CSSProperties;
  title?: string;
  inset?: boolean;
  ref?: React.MutableRefObject<{el: HTMLElement | null}>;
  CHILDREN_PROP
*/

var Card = /*#__PURE__*/forwardRef(function (props, ref) {
  var elRef = useRef(null);
  var inset = props.inset,
      className = props.className,
      style = props.style,
      title = props.title;
  var classes = classNames(className, 'zmp-card', {
    'zmp-card-inset': inset
  });
  useImperativeHandle(ref, function () {
    return {
      el: ref.current
    };
  });
  return /*#__PURE__*/React.createElement("div", {
    ref: elRef,
    className: classes,
    style: style
  }, title && /*#__PURE__*/React.createElement("div", {
    className: "zmp-card-title"
  }, title), /*#__PURE__*/React.createElement("div", {
    className: "zmp-card-body"
  }, props.children));
});
Card.displayName = 'zmp-card';
export default Card;