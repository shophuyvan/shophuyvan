import _extends from "@babel/runtime/helpers/extends";
import React, { forwardRef, useRef, useImperativeHandle, useContext } from 'react';
import { classNames, getExtraAttrs } from '../shared/utils';
import { colorClasses } from '../shared/mixins';
import { ListContext } from '../shared/list-context';

var ListGroup = /*#__PURE__*/forwardRef(function (props, ref) {
  var className = props.className,
      id = props.id,
      style = props.style,
      children = props.children,
      simpleList = props.simpleList,
      mediaList = props.mediaList,
      sortable = props.sortable,
      sortableOpposite = props.sortableOpposite,
      sortableTapHold = props.sortableTapHold,
      sortableMoveElements = props.sortableMoveElements;
  var extraAttrs = getExtraAttrs(props);
  var listContext = useContext(ListContext);
  var elRef = useRef(null);
  useImperativeHandle(ref, function () {
    return {
      el: elRef.current
    };
  });
  var classes = classNames(className, 'list-group', {
    'media-list': mediaList,
    sortable: sortable,
    'sortable-tap-hold': sortableTapHold,
    'sortable-opposite': sortableOpposite
  }, colorClasses(props));
  return /*#__PURE__*/React.createElement("div", _extends({
    id: id,
    style: style,
    className: classes,
    "data-sortable-move-elements": typeof sortableMoveElements !== 'undefined' ? sortableMoveElements.toString() : undefined,
    ref: elRef
  }, extraAttrs), /*#__PURE__*/React.createElement("ul", null, /*#__PURE__*/React.createElement(ListContext.Provider, {
    value: {
      listIsMedia: mediaList || listContext.listIsMedia,
      listIsSimple: simpleList || listContext.listIsSimple,
      listIsSortable: sortable || listContext.listIsSortable,
      listIsSortableOpposite: sortableOpposite || listContext.listIsSortableOpposite
    }
  }, children)));
});
ListGroup.displayName = 'zmp-list-group';
export default ListGroup;