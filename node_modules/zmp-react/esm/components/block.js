import _extends from "@babel/runtime/helpers/extends";
import React, { forwardRef, useRef, useImperativeHandle } from 'react';
import { classNames, getExtraAttrs } from '../shared/utils';
import { colorClasses } from '../shared/mixins';
import { useTab } from '../shared/use-tab';

var Block = /*#__PURE__*/forwardRef(function (props, ref) {
  var className = props.className,
      inset = props.inset,
      xsmallInset = props.xsmallInset,
      smallInset = props.smallInset,
      mediumInset = props.mediumInset,
      largeInset = props.largeInset,
      xlargeInset = props.xlargeInset,
      strong = props.strong,
      accordionList = props.accordionList,
      accordionOpposite = props.accordionOpposite,
      tabs = props.tabs,
      tab = props.tab,
      tabActive = props.tabActive,
      noHairlines = props.noHairlines,
      noHairlinesIos = props.noHairlinesIos,
      noHairlinesMd = props.noHairlinesMd,
      noHairlinesAurora = props.noHairlinesAurora,
      id = props.id,
      style = props.style,
      children = props.children;
  var extraAttrs = getExtraAttrs(props);
  var elRef = useRef(null);
  useImperativeHandle(ref, function () {
    return {
      el: elRef.current
    };
  });
  useTab(elRef, props);
  var classes = classNames(className, 'block', {
    inset: inset,
    'xsmall-inset': xsmallInset,
    'small-inset': smallInset,
    'medium-inset': mediumInset,
    'large-inset': largeInset,
    'xlarge-inset': xlargeInset,
    'block-strong': strong,
    'accordion-list': accordionList,
    'accordion-opposite': accordionOpposite,
    tabs: tabs,
    tab: tab,
    'tab-active': tabActive,
    'no-hairlines': noHairlines,
    'no-hairlines-md': noHairlinesMd,
    'no-hairlines-ios': noHairlinesIos,
    'no-hairlines-aurora': noHairlinesAurora
  }, colorClasses(props));
  return /*#__PURE__*/React.createElement("div", _extends({
    id: id,
    style: style,
    className: classes,
    ref: elRef
  }, extraAttrs), children);
});
Block.displayName = 'zmp-block';
export default Block;