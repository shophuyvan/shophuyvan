import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutPropertiesLoose from "@babel/runtime/helpers/objectWithoutPropertiesLoose";
import React, { forwardRef, useRef, useImperativeHandle } from 'react';
import { useIsomorphicLayoutEffect } from '../shared/use-isomorphic-layout-effect';
import { classNames, getExtraAttrs } from '../shared/utils';
import { colorClasses } from '../shared/mixins';
import RoutableModals from './routable-modals';
import { zmpinit, zmp } from '../shared/zmp';



var App = /*#__PURE__*/forwardRef(function (props, ref) {
  var className = props.className,
      style = props.style,
      children = props.children,
      rest = _objectWithoutPropertiesLoose(props, ["className", "style", "children"]);

  var extraAttrs = getExtraAttrs(props);
  var params = rest;
  var elRef = useRef(null);
  useImperativeHandle(ref, function () {
    return {
      el: elRef.current
    };
  });
  var classes = classNames(className, 'zmp-root', colorClasses(props)); // eslint-disable-next-line

  if (!zmp || typeof window === 'undefined') {
    zmpinit(elRef.current, params, false);
  }

  useIsomorphicLayoutEffect(function () {
    var parentEl = elRef.current && elRef.current.parentNode;
    /* eslint-disable no-restricted-globals */

    if (typeof document !== 'undefined' && parentEl && parentEl !== document.body && parentEl.parentNode === document.body) {
      parentEl.style.height = '100%';
    }
    /* eslint-enable no-restricted-globals */


    if (zmp) {
      zmp.init(elRef.current);
      return;
    }

    zmpinit(elRef.current, params, true);
  }, []);
  return /*#__PURE__*/React.createElement("div", _extends({
    id: "zmp-root",
    style: style,
    className: classes,
    ref: elRef
  }, extraAttrs), children, /*#__PURE__*/React.createElement(RoutableModals, null));
});
App.displayName = 'zmp-app';
export default App;