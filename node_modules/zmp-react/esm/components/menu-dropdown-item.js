import _extends from "@babel/runtime/helpers/extends";
import React, { forwardRef, useRef, useImperativeHandle } from 'react';
import { classNames, getExtraAttrs, emit } from '../shared/utils';
import { colorClasses, routerAttrs, routerClasses, actionsAttrs, actionsClasses } from '../shared/mixins';
import { useRouteProps } from '../shared/use-route-props';

var MenuDropdownItem = /*#__PURE__*/forwardRef(function (props, ref) {
  var className = props.className,
      id = props.id,
      style = props.style,
      children = props.children,
      link = props.link,
      href = props.href,
      target = props.target,
      text = props.text,
      divider = props.divider,
      menuClose = props.menuClose;
  var extraAttrs = getExtraAttrs(props);
  var elRef = useRef(null);

  var onClick = function onClick(e) {
    emit(props, 'click', e);
  };

  useImperativeHandle(ref, function () {
    return {
      el: elRef.current
    };
  });
  useRouteProps(elRef, props);
  var isLink = link || href || href === '';
  var Tag = isLink ? 'a' : 'div';
  var classes = classNames({
    'menu-dropdown-link': isLink && !divider,
    'menu-dropdown-item': !isLink && !divider,
    'menu-dropdown-divider': divider
  }, className, colorClasses(props), routerClasses(props), actionsClasses(props), {
    'menu-close': typeof menuClose === 'undefined'
  });
  var hrefComputed = href;
  if (typeof hrefComputed === 'undefined' && link) hrefComputed = '#';

  var attrs = _extends({
    href: hrefComputed,
    target: target
  }, routerAttrs(props), actionsAttrs(props));

  return /*#__PURE__*/React.createElement(Tag, _extends({
    className: classes,
    id: id,
    style: style,
    ref: elRef
  }, attrs, extraAttrs, {
    onClick: onClick
  }), text, children);
});
MenuDropdownItem.displayName = 'zmp-menu-dropdown-item';
export default MenuDropdownItem;