/* SHV API Worker v12 (CORS + Admin auth + Promos API) */
const textEncoder = new TextEncoder();
function toHex(buf){return [...new Uint8Array(buf)].map(b=>b.toString(16).padStart(2,'0')).join('');}
async function sha256Hex(str){const data=textEncoder.encode(str);const d=await crypto.subtle.digest('SHA-256',data);return toHex(d);}
const ALLOWED_ORIGINS=['https://adminshophuyvan.pages.dev'];
function pickOrigin(req){const o=req.headers.get('Origin')||'';return ALLOWED_ORIGINS.includes(o)?o:ALLOWED_ORIGINS[0]||'*';}
function corsHeaders(origin,req){const h=new Headers();h.set('Access-Control-Allow-Origin',origin);h.set('Vary','Origin');h.set('Access-Control-Allow-Methods','GET,POST,PUT,DELETE,OPTIONS');h.set('Access-Control-Allow-Headers',req?.headers.get('Access-Control-Request-Headers')||'content-type,authorization,x-setup-key');h.set('Access-Control-Max-Age','86400');h.set('Cache-Control','no-store');return h;}
function jsonResponse(obj,origin,status=200){const h=corsHeaders(origin);h.set('content-type','application/json;charset=utf-8');return new Response(JSON.stringify(obj),{status,headers:h});}
function textResponse(txt,origin,status=200){const h=corsHeaders(origin);h.set('content-type','text/plain;charset=utf-8');return new Response(String(txt),{status,headers:h});}
export default{async fetch(req,env,ctx){const url=new URL(req.url);const p=url.pathname;const origin=pickOrigin(req);if(req.method==='OPTIONS'){return new Response(null,{status:204,headers:corsHeaders(origin,req)});}
if(req.method==='POST'&&p==='/admin/setup'){const key=req.headers.get('x-setup-key')||'';if(!env.SETUP_KEY)return jsonResponse({ok:false,error:'SETUP_KEY not configured'},origin,500);if(key!==env.SETUP_KEY)return jsonResponse({ok:false,error:'Forbidden'},origin,403);let data={};try{data=await req.json();}catch{return jsonResponse({ok:false,error:'Body JSON required'},origin,400);}const u=String(data.u||'').trim().toLowerCase();if(!u)return jsonResponse({ok:false,error:'u required'},origin,400);const exists=await env.AUTH_KV.get('admin:'+u,{type:'json'});if(exists)return jsonResponse({ok:false,error:'Admin already exists'},origin,409);const salt=crypto.getRandomValues(new Uint8Array(16));const saltHex=[...salt].map(b=>b.toString(16).padStart(2,'0')).join('');const hash=await sha256Hex(saltHex+':'+data.p);await env.AUTH_KV.put('admin:'+u,JSON.stringify({username:u,hash,salt:saltHex,createdAt:Date.now()}));return jsonResponse({ok:true,created:u},origin);}
if(p==='/admin/login'){if(req.method!=='POST')return textResponse('method not allowed',origin,405);let data={};try{data=await req.json();}catch{return jsonResponse({ok:false,error:'Body JSON required'},origin,400);}const u=String(data.u||'').trim().toLowerCase();const rec=await env.AUTH_KV.get('admin:'+u,{type:'json'});if(!rec)return jsonResponse({ok:false,error:'Unauthorized'},origin,401);const hash=await sha256Hex(rec.salt+':'+data.p);if(hash!==rec.hash)return jsonResponse({ok:false,error:'Unauthorized'},origin,401);const rnd=crypto.getRandomValues(new Uint8Array(8));const token=(await sha256Hex(rec.username+':'+rec.createdAt+':'+Array.from(rnd).join('-'))).slice(0,32);await env.AUTH_KV.put('session:'+token,JSON.stringify({u:rec.username,t:Date.now()}),{expirationTtl:60*60*24*7});return jsonResponse({ok:true,token},origin);}
if(req.method==='GET'&&(p==='/admin/whoami'||p==='/admin/me')){const token=url.searchParams.get('token')||'';const sess=token?await env.AUTH_KV.get('session:'+token,{type:'json'}):null; if(!sess)return jsonResponse({ok:false,error:'Invalid'},origin,401);return jsonResponse({ok:true,user:sess.u},origin);}
if(req.method==='GET'&&(p==='/public/promos'||p==='/api/public/promos')){const list=await env.PRODUCTS_KV.get('promos:latest',{type:'json'})||[];return jsonResponse(list,origin,200);}
if((p==='/admin/promos'||p==='/api/admin/promos')&&req.method==='PUT'){const token=url.searchParams.get('token')||'';const sess=token?await env.AUTH_KV.get('session:'+token,{type:'json'}):null; if(!sess)return jsonResponse({ok:false,error:'Unauthorized'},origin,401);let body=[];try{body=await req.json();}catch{return jsonResponse({ok:false,error:'Body must be array'},origin,400);}if(!Array.isArray(body))return jsonResponse({ok:false,error:'Body must be array'},origin,400);await env.PRODUCTS_KV.put('promos:latest',JSON.stringify(body));return jsonResponse({ok:true,saved:body.length},origin,200);}
return textResponse('not found',origin,404);}};
